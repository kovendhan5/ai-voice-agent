#!/usr/bin/env python3
"""
Minimal test of voice synthesis components
"""

print("üé≠ MINIMAL VOICE SYNTHESIS TEST")
print("=" * 40)

# Test 1: Basic imports
print("\n1Ô∏è‚É£ Testing basic imports...")
try:
    import torch
    print(f"‚úÖ PyTorch {torch.__version__}")
except Exception as e:
    print(f"‚ùå PyTorch: {e}")

try:
    import numpy as np
    print(f"‚úÖ NumPy {np.__version__}")
except Exception as e:
    print(f"‚ùå NumPy: {e}")

# Test 2: MeloTTS
print("\n2Ô∏è‚É£ Testing MeloTTS...")
try:
    import melo
    print("‚úÖ MeloTTS available")
    
    # Try to create a simple TTS instance
    from melo.api import TTS
    print("‚úÖ MeloTTS API accessible")
    
except Exception as e:
    print(f"‚ùå MeloTTS: {e}")

# Test 3: Edge TTS fallback
print("\n3Ô∏è‚É£ Testing Edge TTS...")
try:
    import edge_tts
    print("‚úÖ Edge TTS available")
except Exception as e:
    print(f"‚ùå Edge TTS: {e}")

# Test 4: OpenVoice
print("\n4Ô∏è‚É£ Testing OpenVoice...")
try:
    import openvoice
    print("‚úÖ OpenVoice package found")
    
    try:
        from openvoice.api import BaseSpeakerTTS
        print("‚úÖ OpenVoice API accessible")
    except Exception as e:
        print(f"‚ö†Ô∏è  OpenVoice API issue: {e}")
        
except Exception as e:
    print(f"‚ùå OpenVoice: {e}")

print("\n" + "=" * 40)
print("üìä SUMMARY:")
print("This test helps identify which voice synthesis options are available.")
print("The system will automatically use the best available option.")
